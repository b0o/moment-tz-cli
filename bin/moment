#!/usr/bin/env node

const program = require("commander")
const moment = require("moment-timezone")
const pkg = require("../package.json")

program
  .version(pkg.version)
  .usage("<input> [options]")
  .option("-i --inputFormat <format>", "e.g: \"MM-DD-YYYY\". Special handling for \"unix\".")
  .option("-f --format <format>", "Output format. See momentjs docs for options.")
  .option("-t --timeago", "Output in `timeago` format (fromNow).")
  .option("-c --calendar", "Output in `calendar` format.")
  .option("-u --unix", "Output a unix timestamp (secs since Epoch).")
  .option("-j --js", "Ouput a JavaScript timestamp (ms since Epoch).")
  .option("-z --inputTimezone <tz>", "Use specified timezone when parsing input")
  .option("-Z --outputTimezone <tz>", "Convert output to specified timezone")
  .option("-H --military", "Use 24-hour (military) time in output by default")
  .parse(process.argv)

const input = program.args[0] || Date.now()
const inputInt = parseInt(input, 10)
const isNumeric = inputInt.toString() === input
const timeFormat = program.military ? "HH:mm" : "h:mm A"

const constructor = program.inputTimezone
  ? (...inputs) => moment.tz(...inputs, program.inputTimezone)
  : moment

let date
if (program.inputFormat) {
  if (program.inputFormat === "unix") {
    date = moment.unix(inputInt)
  } else {
    date = constructor(input, program.inputFormat)
  }
} else if (isNumeric) {
  date = constructor(inputInt)
} else {
  date = constructor(input)
}

if (program.outputTimezone) {
  date = constructor(date.tz(program.outputTimezone).format("YYYY-MM-DDTHH:mm:ss"))
}

const output = (...out) => process.stdout.write([...out, "\n"].join(""))
if (program.format) {
  output(date.format(program.format))
} else if (program.timeago) {
  output(date.fromNow())
} else if (program.calendar) {
  output(date.calendar(null, {
    sameDay:  `[Today] [at] ${timeFormat}`,
    nextDay:  `[Tomorrow] [at] ${timeFormat}`,
    nextWeek: `dddd [at] ${timeFormat}`,
    lastDay:  `[Yesterday] [at] ${timeFormat}`,
    lastWeek: `[Last] dddd [at] ${timeFormat}`,
    sameElse: `DD/MM/YYYY [at] ${timeFormat}`,
  }))
} else if (program.unix) {
  output(date.unix())
} else if (program.js) {
  output(date.valueOf())
} else if (isNumeric) {
  output(date.format())
} else {
  output(date.valueOf())
}
